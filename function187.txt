                                   // System.out.println("function name is  "+ newToken);
                                    int gft=1;
                                   if(str.contains(newToken)&&str.contains(";")){
                                        gft++;}
                                    int parameters;
                                    String newString = str.substring(str.indexOf(newToken));
                                    if (newString.contains("()") || newString.contains("( )") || newString.contains("(  )")) {
                                        parameters = 0;
                                    } else {
                                        parameters = (newString.split(",")).length;
                                        
                                    }
                                    //System.out.println("no of arguments are ... " + parameters);
                                    funno++;
              
                                    readerInner = reader;
                                    boolean open = true;
                                    String funLine;
                                    int lineOfFunction = 0, openBraceCounter = 1;
                                    try (FileWriter fw = new FileWriter("function" + funno + ".txt")) {
                                        fw.write(str + "\r\n");
                                        while ((funLine = readerInner.readLine()) != null && open) {
                                            
                                            int k = 0;
                                            while (k < funLine.length()) {
                                                if (funLine.charAt(k) == '{') {
                                                    openBraceCounter++;
                                                }
                                                if (funLine.charAt(k) == '}') {
                                                    openBraceCounter--;
                                                }
                                                if (openBraceCounter < 1) {
                                                    open = false;
                                                    break;
                                                }
                                                k++;
                                            }
                                            fw.write(funLine + "\r\n");
                                            lineOfFunction++;
                                            
                                        }
                                    }
                                    }
