       // System.out.println("trno --> "+trno);
        if(whlno>0)
            whlno=whlno-dono;
          int coc=ifno+elseno+elseifno+caseno+swhno+tryno+catchno+trno+dono+whlno+frno;
           if(coc>50){
               cc="High";
               refactoringSuggestion.setText("Should Derive New Class!");}
           else if(coc>=20 && coc<50){
               cc="Medium";
           refactoringSuggestion.setText("Class is Fine!");
           }
           else
           {  cc="low";
           refactoringSuggestion.setText("Adjustable Class!");
           }
           
           commentno= calcComments(lines);
           int ploc=loc-(commentno+elineno);
           //tryno=catchno;
            str = reader.readLine();
            Scanner scan = new Scanner(fr);
            reader.close(); 
            if(i_no>0)
            i_no= i_no-si_no;
             if(i_no>0)
            i_no= i_no-li_no;
            
           // LOC INFO
            totalLOCtxt.setText(Integer.toString(loc));
            blankLinestxt.setText(Integer.toString(elineno));
            commentedLinestxt.setText(Integer.toString(commentno));
            physicalLinestxt.setText(Integer.toString(ploc));//p
            logicalLinestxt.setText(Integer.toString(lloc));//l
            openBracestxt.setText(Integer.toString(openbrace));
            closeBracestxt.setText(Integer.toString(closebrace));
            // DATA TYPES INFO
            noOfINT.setText(Integer.toString(i_no));
            noOfShortINT.setText(Integer.toString(si_no));
            noOfLongINT.setText(Integer.toString(li_no));            
            noOfSTRING.setText(Integer.toString(s_no));
            noOfDOUBLE.setText(Integer.toString(d_no));
            noOfFLOAT.setText(Integer.toString(f_no));
            noOfBOOL.setText(Integer.toString(b_no));
            noOfCHAR.setText(Integer.toString(c_no));            
            // Class_INFO
            classNametxt.setText(classname);
            classStatustxt.setText(s1);
            classCCtxt.setText(cc);            
            noOfChildClasstxt.setText(Integer.toString(child));
            noOfParentClasstxt.setText(Integer.toString(pc));
            // Loop Statements INFO           
            noOfFORLOOP.setText(Integer.toString(frno));
            noOfDOWHILELOOP.setText(Integer.toString(dono));
            noOfWHILELOOP.setText(Integer.toString(whlno));
            // Conditional Statements INFO            
            noOfIFStatement.setText(Integer.toString(ifno));
            noOfSwitchStatement.setText(Integer.toString(swhno));
            noOfTryBlock.setText(Integer.toString(tryno));
            noOfElseIfStatement.setText(Integer.toString(elseifno));
            noOfElseStatement.setText(Integer.toString(elseno));
            noOfCases.setText(Integer.toString(caseno));
            noOfCatchBlocks.setText(Integer.toString(catchno));
            noOfFinallyBlocks.setText(Integer.toString(finallyno));
             //     Varaibles Created
            noOfINTV.setText(Integer.toString(INT_Count));
            noOfShortINTV.setText(Integer.toString(SHORT_INT_Count));
            noOfLongINTV.setText(Integer.toString(LONG_INT_Count));
            noOfSTRINGV.setText(Integer.toString(STRING_Count));
            noOfDOUBLEV.setText(Integer.toString(DOUBLE_Count));
            noOfFLOATV.setText(Integer.toString(FLOAT_Count));
            noOfBOOLV.setText(Integer.toString(BOOL_Count));
            noOfCHARV.setText(Integer.toString(CHAR_Count));     
                     
            insertInLOCtbl(loc,elineno,commentno,ploc,lloc,openbrace,closebrace);
            insertInDATATYPEtbl(i_no,si_no,li_no,s_no,d_no,f_no,b_no,c_no);
            insertInLOOPtbl(frno,dono,whlno);
            insertInCoditionalStatetbl(ifno,elseno,elseifno,swhno,caseno,tryno,catchno,finallyno);
            insertInVariablestbl(INT_Count,SHORT_INT_Count,LONG_INT_Count,STRING_Count,DOUBLE_Count,FLOAT_Count,BOOL_Count,CHAR_Count);
           
       } catch (Exception e) {
